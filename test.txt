import pandas as pd
import re
from collections import Counter

# Function to read CSV, process all data and count word frequencies
def word_frequencies_from_csv(file_path):
    # Step 1: Load the CSV file
    df = pd.read_csv(file_path)
    
    # Step 2: Combine all data from the CSV file into one large string
    # Convert everything in the dataframe to a single string and join with spaces
    full_text = ' '.join(df.astype(str).values.flatten())
    
    # Step 3: Clean and tokenize the text
    # Convert to lowercase, remove non-alphabetic characters (you can modify this for better handling of punctuation, etc.)
    words = re.findall(r'\b\w+\b', full_text.lower())
    
    # Step 4: Count word frequencies using Counter
    word_counts = Counter(words)
    
    # Step 5: Create a DataFrame from the word counts
    word_freq_df = pd.DataFrame(word_counts.items(), columns=['Word', 'Frequency'])
    
    # Sort by frequency in descending order
    word_freq_df = word_freq_df.sort_values(by='Frequency', ascending=False).reset_index(drop=True)
    
    return word_freq_df

# Example usage
file_path = 'TheGiftOfMagi.csv'  # Path to your CSV file
word_freq_df = word_frequencies_from_csv(file_path)

# Display the word frequencies
print(word_freq_df)








import pandas as pd        #importing pandas
file_path='TheGiftOfMagi.csv'     #defining filepath

#creating function to get word count
def  fn_Counter(filepath):
    file =open(filepath,'r',encoding='UTF-8')           #read the specified csv file
    dict_Uniquewords={}                                 #inililizing dictionay to store unique words and counts
    for line in file:                                   #looping through each files
        if line.strip()!="":                            #Checking for not empty lines                 
            line=line.strip()                           #removing spaces 
            list_Lines=line.split()                     #spliting sentences to words based on space character
            for item in list_Lines:                     #looping through each items/words in line
                if(item not in dict_Uniquewords):
                    dict_Uniquewords[item]=1            #if new word then adding to dictionary
                else:
                    dict_Uniquewords[item]+=1           #if already existing word incrementing count
    file.close()
    return dict_Uniquewords

#function call
dictUniqueWordCount =fn_Counter(file_path)

#creation of dataframe and defining columns
df=pd.DataFrame(list(dictUniqueWordCount.items()),columns=['Words', 'Count'])
print(df) 



"mongodb+srv://rohithrajreganti:rohithrajreganti@cluster0.rd7dn.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
https://ctxt.io/2/AAB4_AbNFQ


from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi

uri=r"mongodb+srv://rohithrajreganti:rohithrajreganti@cluster0.rd7dn.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"

#create a new client and connect to the server
client=MongoClient(uri,server_api=ServerApi('1'),tlsAllowInvalidCertificates=True)

#send a ping to confirm the successful connection

try:
    client.admin.command('ping')
    print('pinged ur deployment, u r successfully connected')
except Exception as e:
    print(e)
